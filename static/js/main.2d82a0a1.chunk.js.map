{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["rarities","App","selectedRarities","setSelectedRarities","useState","apiResults","setApiResults","error","setError","loading","setLoading","darkMode","setDarkMode","formatNumber","number","Intl","NumberFormat","format","calculateSatScore","S","M","A","F","FH","S_max","Math","pow","logS_max","log","logS","logM","AF_avg","AF_avg_n","Sc","AFc","Hc","Sci","AFci","Hci","score","power_transformed_score","handleCheckboxChange","event","value","target","prevState","includes","filter","item","renderCategory","category","items","borderColor","React","createElement","style","border","concat","borderRadius","margin","padding","flex","minWidth","color","marginBottom","className","map","key","marginRight","type","id","checked","onChange","htmlFor","marginLeft","sortedQueries","JSON","parse","localStorage","getItem","sort","a","b","satScore","position","top","right","onClick","toggleDarkMode","prevMode","document","body","classList","toggle","display","flexWrap","gap","handleQueryClick","length","query","join","apiUrl","fetch","then","response","json","data","message","n_total","n_mined","n_365","n_seq","n_seq_holders","queryData","result","savedQueries","some","push","setItem","stringify","catch","console","finally","handleClearClick","role","n_epoch","n_inscribed","n_total_holders","Date","updated_at","toLocaleString","Fragment","toFixed","textAlign","CircularProgressbar","text","styles","buildStyles","textColor","pathColor","trailColor","marginTop","fontSize","fontFamily","lineHeight","alignItems","flexDirection","borderTop","index","href","rel","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2d82a0a1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport './App.css'; // Add a CSS file for additional styling\n\nconst rarities = {\n  RRI: [\"uncommon\", \"rare\", \"epic\"],\n  Black: [\"black_uncommon\", \"black_rare\", \"black_epic\"],\n  Historical: [\"450x\", \"block_9\", \"jan2009\", \"2009\", \"vintage\", \"block_78\", \"block_286\", \"block_666\", \"nakamoto\"],\n  Type: [\"palindrome\", \"alpha\", \"omega\"],\n  Events: [\"pizza\", \"jpeg\", \"hitman\", \"silkroad\"],\n  Palindrome: [\"1_digit\", \"2_digits\", \"3_digits\", \"perfect_palinception\", \"uniform_palinception\", \"sequence_palindrome\"],\n  Other: [\"paliblock\", \"rodarmor\", \"fibonacci\", \"legacy\"],\n};\n\nconst App = () => {\n  const [selectedRarities, setSelectedRarities] = useState([]);\n  const [apiResults, setApiResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode((prevMode) => !prevMode);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  // Format numbers for readability\n  const formatNumber = (number) => {\n    return new Intl.NumberFormat('en-US').format(number);\n  };\n\n  // Calculate Sat score\n  const calculateSatScore = (S, M, A, F, FH) => {\n    const S_max = 2.1 * Math.pow(10, 15); // 2.1 quadrillion\n    const logS_max = Math.log(S_max);\n    const logS = Math.log(S);\n    const logM = Math.log(M);\n\n    const AF_avg = (A + F)/2;\n    const AF_avg_n = AF_avg > 1 ? AF_avg : 1;\n\n    const Sc = (logS / logS_max);\n    const AFc = Math.log(AF_avg_n) / logM;\n    const Hc = (1 - (FH / F)) > 0 ? (1 - (FH / F)) : 0.01;  // Impact of holders relative to supply\n\n    const Sci = 1 - Sc;\n    const AFci = 1 - AFc;\n    const Hci = 1 - Hc;\n\n    // Calculate score using the formula\n    const score = 1000 * (1 - Sc * AFc * Hc);\n\n    // Apply power law transformation to the score\n    const alpha = 1.5;\n    const power_transformed_score = Math.pow(score / 1000, alpha) * 1000;\n\n    return { score, power_transformed_score, Sc, AFc, Hc, Sci, AFci, Hci };\n  };\n\n  const handleCheckboxChange = (event) => {\n    const value = event.target.value;\n    setSelectedRarities((prevState) =>\n      prevState.includes(value)\n        ? prevState.filter((item) => item !== value)\n        : [...prevState, value]\n    );\n  };\n\n  const handleClearClick = () => {\n    setSelectedRarities([]);\n    setApiResults(null);\n    setError(null);\n  };\n\n  const handleQueryClick = () => {\n    if (selectedRarities.length === 0) {\n      setError(\"Please select at least one rarity.\");\n      return;\n    }\n\n    const query = selectedRarities.join(\",\");\n    const apiUrl = `https://api.deezy.io/v1/sat-hunting/circulation?rarity=${query}`;\n\n    setLoading(true);\n\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message) {\n          setError(data.message);\n          setApiResults(null);\n        } else {\n          setApiResults(data.data);\n          setError(null);\n\n          // Save the query and results in localStorage\n          const satScore = calculateSatScore(data.data.n_total, data.data.n_mined, data.data.n_365, data.data.n_seq, data.data.n_seq_holders);\n\n          if(data.data.n_total > 0 && satScore.score) {\n            const queryData = {\n              query: selectedRarities,\n              result: data.data,\n              satScore: satScore,\n            };\n\n            // Get existing queries from localStorage\n            const savedQueries = JSON.parse(localStorage.getItem('queries')) || [];\n\n            // Prevent duplicates by checking if the query already exists\n            const isDuplicate = savedQueries.some(item => item.query.join(\",\") === selectedRarities.join(\",\"));\n            if (!isDuplicate) {\n              savedQueries.push(queryData);\n              localStorage.setItem('queries', JSON.stringify(savedQueries));\n            }\n          }\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n        setError(\"An error occurred while fetching data.\");\n        setApiResults(null);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const renderCategory = (category, items, borderColor) => (\n    <div\n      style={{\n        border: `2px solid ${borderColor}`,\n        borderRadius: \"10px\",\n        margin: \"5px\",\n        padding: \"10px\",\n        flex: \"1 1 30%\", // Adjust for a compact layout\n        minWidth: \"200px\",\n      }}\n    >\n      <h5 style={{ color: borderColor, marginBottom: \"5px\" }}>{category}</h5>\n      <div className=\"d-flex flex-wrap\">\n        {items.map((item) => (\n          <div key={item} style={{ marginRight: \"10px\", marginBottom: \"5px\" }}>\n            <input\n              type=\"checkbox\"\n              id={item}\n              value={item}\n              checked={selectedRarities.includes(item)}\n              onChange={handleCheckboxChange}\n            />\n            <label htmlFor={item} style={{ marginLeft: \"5px\" }}>\n              {item}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Get saved queries from localStorage\n  const savedQueries = JSON.parse(localStorage.getItem('queries')) || [];\n\n  // Sort the saved queries by Sat score\n  const sortedQueries = savedQueries.sort((a, b) => b.satScore.score - a.satScore.score);\n\n  return (\n    <div className={`container mt-5 ${darkMode ? 'dark-mode-container' : ''}`}>\n      {/* Dark mode toggle button */}\n      <div style={{ position: 'absolute', top: '10px', right: '10px' }}>\n        <button\n          className={`btn ${darkMode ? 'btn-light' : 'btn-dark'}`}\n          onClick={toggleDarkMode}\n        >\n          {darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n        </button>\n      </div>\n\n      <h1 className={`text-center mb-4 ${darkMode ? 'text-light' : 'text-dark'}`}>Select Rarities</h1>\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          gap: \"5px\", // Minimized space between categories\n        }}\n      >\n        {renderCategory(\"Rodarmor Rarity\", rarities.RRI, \"#EF476F\")}          {/* Coral Red */}\n        {renderCategory(\"Black\", rarities.Black, \"#2A2D34\")}      {/* Charcoal Gray */}\n        {renderCategory(\"Other types\", rarities.Type, \"#FFD166\")}        {/* Goldenrod Yellow */}\n        {renderCategory(\"Historical\", rarities.Historical, \"#118AB2\")} {/* Azure Blue */}\n        {renderCategory(\"Events\", rarities.Events, \"#06D6A0\")}    {/* Mint Green */}\n        {renderCategory(\"Palindrome\", rarities.Palindrome, \"#8ECAE6\")} {/* Sky Blue */}\n        {renderCategory(\"Other\", rarities.Other, \"#9D4EDD\")}      {/* Violet Purple */}\n      </div>\n\n      <div className=\"text-center mb-4\">\n        <button className=\"btn btn-primary mt-3\" onClick={handleQueryClick}>\n          Query\n        </button>\n        <button className=\"btn btn-secondary mt-3 ms-2\" onClick={handleClearClick}>\n          Clear\n        </button>\n      </div>\n\n      {loading && (\n        <div className=\"text-center\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"alert alert-danger\">\n          <strong>Error:</strong> {error}\n        </div>\n      )}\n\n      {apiResults && (\n        <div className=\"mt-4\">\n          <h2 className={`mb-4 ${darkMode ? 'text-light' : 'text-dark'}`}>Results</h2>\n          <div className={`list-group ${darkMode ? 'bg-dark text-light' : ''}`}>\n            <p className=\"list-group-item\"><strong>Total:</strong> {formatNumber(apiResults.n_total)}</p>\n            <p className=\"list-group-item\"><strong>Mined:</strong> {formatNumber(apiResults.n_mined)}</p>\n            <p className=\"list-group-item\"><strong>Active Epoch:</strong> {formatNumber(apiResults.n_epoch)}</p>\n            <p className=\"list-group-item\"><strong>Active 365 Days:</strong> {formatNumber(apiResults.n_365)}</p>\n            <p className=\"list-group-item\"><strong>Found:</strong> {formatNumber(apiResults.n_seq)}</p>\n            <p className=\"list-group-item\"><strong>Inscribed:</strong> {formatNumber(apiResults.n_inscribed)}</p>\n            <p className=\"list-group-item\"><strong>Found Holders:</strong> {formatNumber(apiResults.n_seq_holders)}</p>\n            <p className=\"list-group-item\"><strong>Total Holders:</strong> {formatNumber(apiResults.n_total_holders)}</p>\n            <p className=\"list-group-item\"><strong>Updated At:</strong> {new Date(apiResults.updated_at).toLocaleString()}</p>\n          </div>\n        </div>\n      )}\n\n      {/* Display Sat Score if available */}\n      {apiResults && (\n        <>\n\n          <hr />\n\n          <div className=\"mt-4\">\n            {/* Sat Score and Gauges on the Same Line */}\n            <div className=\"d-flex align-items-center justify-content-around mt-4\">\n              {/* Sat Score */}\n              <div>\n                <h3>Sat Score: {calculateSatScore(apiResults.n_total, apiResults.n_mined, apiResults.n_365, apiResults.n_seq, apiResults.n_seq_holders).score.toFixed(2)}</h3>\n              </div>\n\n              {/* Gauges */}\n              <div className=\"d-flex\">\n                {/* Gauge for logS / logS_max */}\n                <div style={{ margin: \"0 10px\", textAlign: \"center\" }}>\n                  <CircularProgressbar\n                    value={calculateSatScore(apiResults.n_total, apiResults.n_mined, apiResults.n_365, apiResults.n_seq, apiResults.n_seq_holders).Sci * 100}\n                    text={`${(calculateSatScore(apiResults.n_total, apiResults.n_mined, apiResults.n_365, apiResults.n_seq, apiResults.n_seq_holders).Sci * 100).toFixed(0)} pt.`}\n                    styles={buildStyles({\n                      textColor: \"#EF476F\",\n                      pathColor: \"#EF476F\",\n                      trailColor: \"#d6d6d6\",\n                    })}\n                  />\n                  <p style={{ marginTop: \"10px\", fontSize: \"0.9rem\" }}>Supply</p>\n                </div>\n\n                {/* Gauge for AFci */}\n                <div style={{ margin: \"0 10px\", textAlign: \"center\" }}>\n                  <CircularProgressbar\n                    value={Math.pow(calculateSatScore(apiResults.n_total, apiResults.n_mined, apiResults.n_365, apiResults.n_seq, apiResults.n_seq_holders).AFci, 1/3) * 100}\n                    text={`${(Math.pow(calculateSatScore(apiResults.n_total, apiResults.n_mined, apiResults.n_365, apiResults.n_seq, apiResults.n_seq_holders).AFci, 1/3) * 100).toFixed(0)} pt.`}\n                    styles={buildStyles({\n                      textColor: \"#06D6A0\",\n                      pathColor: \"#06D6A0\",\n                      trailColor: \"#d6d6d6\",\n                    })}\n                  />\n                  <p style={{ marginTop: \"10px\", fontSize: \"0.9rem\" }}>Active+Found</p>\n                </div>\n\n                {/* Gauge for Hci */}\n                <div style={{ margin: \"0 10px\", textAlign: \"center\" }}>\n                  <CircularProgressbar\n                    value={Math.pow(calculateSatScore(apiResults.n_total, apiResults.n_mined, apiResults.n_365, apiResults.n_seq, apiResults.n_seq_holders).Hci, 1/3) * 100}\n                    text={`${(Math.pow(calculateSatScore(apiResults.n_total, apiResults.n_mined, apiResults.n_365, apiResults.n_seq, apiResults.n_seq_holders).Hci, 1/3) * 100).toFixed(0)} pt.`}\n                    styles={buildStyles({\n                      textColor: \"#118AB2\",\n                      pathColor: \"#118AB2\",\n                      trailColor: \"#d6d6d6\",\n                    })}\n                  />\n                  <p style={{ marginTop: \"10px\", fontSize: \"0.9rem\" }}>Holders</p>\n                </div>\n              </div>\n            </div>\n\n            <p><strong>What is the Sat Score?</strong></p>\n            <p>\n              The <strong>Sat score</strong> is a unique metric (developed by AI) that provides a numerical representation of the relative rarity of a given sat.\n              It is calculated using:\n            </p>\n            <ul>\n              <li><strong>Smax</strong> - The total number of sats in existence (2.1 quadrillion).</li>\n              <li><strong>S (n_total)</strong> - The total number of selected sats.</li>\n              <li><strong>M (n_mined)</strong> - The number of mined sats.</li>\n              <li><strong>A (n_365)</strong> - The number of sats active over the past 365 days.</li>\n              <li><strong>F (n_seq)</strong> - The number of sats that are found.</li>\n              <li><strong>FH (n_seq_holders)</strong> - The number of holders of sats that are found.</li>\n            </ul>\n            <p>Note that the Sat score is logarithmic, meaning the resulting scores cannot be directly compared. For example, a score of 800 is not twice as rare as 400; it is significantly rarer, but the relationship is not linear.</p>\n            <p>\n              Additionally, creating your own scores based on different factors or data points that are important to you is encouraged. Custom scores can provide a more tailored understanding of rarity in your specific context.\n            </p>\n            <p><strong>Why is it useful?</strong></p>\n            <p>The Sat score helps users quickly gauge the rarity and significance of specific sat without having to manually interpret large sets of numbers. By looking at the Sat score, you can get a clearer sense of how valuable or noteworthy an item might be, especially when comparing multiple items.</p>\n\n            <p><strong>Formula:</strong></p>\n            <div style={{ fontSize: '1.2rem', fontFamily: 'Courier, monospace', lineHeight: '1.6' }}>\n              PowerLaw(1000 × ( 1 - \n              <span style={{ display: 'inline-flex', alignItems: 'center' }}>\n                <span style={{ display: 'inline-flex', flexDirection: 'column', alignItems: 'center', margin: '0 5px' }}>\n                  <div>log(S)</div>\n                  <div style={{ borderTop: '1px solid black', padding: '0 5px' }}>log(S<sub>max</sub>)</div>\n                </span>\n                ×\n                <span style={{ display: 'inline-flex', flexDirection: 'column', alignItems: 'center', margin: '0 5px' }}>\n                  <div>log(Avg(A,F))</div>\n                  <div style={{ borderTop: '1px solid black', padding: '0 5px' }}>log(M)</div>\n                </span>\n                ×\n                <span style={{ display: 'inline-flex', flexDirection: 'column', alignItems: 'center', margin: '0 5px' }}>\n                  <div>(1 - (FH / F))</div>\n                </span>\n              </span>\n              ))\n            </div>\n\n            <p><strong>Disclaimer:</strong> Please note that the Sat score is an <strong>arbitrary</strong> calculation based on the dataset, and its value can change as the data updates or as new factors are added to the formula. It is not a definitive or static measure of value but rather a tool to assist in understanding the relative importance of items within the dataset.</p>\n          </div>\n        </>\n      )}\n\n      {/* Query History Table */}\n      <div className=\"mt-4\">\n        <h3>Query History</h3>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Query</th>\n              <th>Supply</th>\n              <th>Mined</th>\n              <th>Actv<sub>365</sub></th>\n              <th>Found</th>\n              <th>H<sub>fnd</sub></th>\n              <th>H<sub>ttl</sub></th>\n              <th>%Actv<sub>365</sub></th>\n              <th>%Fnd</th>\n              <th>S<sub>ci</sub></th>\n              <th>AF<sub>ci</sub></th>\n              <th>H<sub>ci</sub></th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedQueries.map((queryData, index) => (\n              <tr key={index}>\n                <td>{queryData.query.join(\", \")}</td>\n\n                <td>{formatNumber(queryData.result.n_total)}</td>\n                <td>{formatNumber(queryData.result.n_mined)}</td>\n                <td>{formatNumber(queryData.result.n_365)}</td>\n                <td>{formatNumber(queryData.result.n_seq)}</td>\n                <td>{formatNumber(queryData.result.n_seq_holders)}</td>\n                <td>{formatNumber(queryData.result.n_total_holders)}</td>\n                <td>{((queryData.result.n_365/queryData.result.n_mined)*100).toFixed(1)}%</td>\n                <td>{((queryData.result.n_seq/queryData.result.n_mined)*100).toFixed(1)}%</td>\n                <td>{queryData.satScore.Sci.toFixed(2)}</td>\n                <td>{queryData.satScore.AFci.toFixed(2)}</td>\n                <td>{queryData.satScore.Hci.toFixed(2)}</td>\n                <td>{queryData.satScore.power_transformed_score.toFixed(2)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Legal Disclaimer */}\n      <footer className=\"mt-5 text-center text-muted\">\n        <p><small><strong>Disclaimer:</strong> This page uses data provided by the API at <a href=\"https://api.deezy.io\" target=\"_blank\" rel=\"noopener noreferrer\">https://api.deezy.io</a>. The data is provided \"as is,\" and the creator of this page does not profit from its use. <strong>This is not financial advice. Use the data at your own risk.</strong></small></p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}