{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["rarities","App","selectedRarities","setSelectedRarities","useState","apiResults","setApiResults","error","setError","handleCheckboxChange","event","value","target","prevState","includes","filter","item","React","createElement","map","rarity","key","type","id","onChange","htmlFor","onClick","handleQueryClick","length","query","join","apiUrl","concat","fetch","then","response","json","data","message","catch","console","style","color","n_total","n_mined","n_epoch","n_365","n_seq","n_inscribed","n_seq_holders","n_total_holders","Date","updated_at","toLocaleString","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"qLAEA,MAAMA,EAAW,CACf,OAAQ,WAAY,OAAQ,OAAQ,iBAAkB,aACtD,aAAc,aAAc,UAAW,UAAW,WAAY,QAC9D,OAAQ,SAAU,WAAY,QAAS,QAAS,UAAW,WAC3D,WAAY,uBAAwB,uBAAwB,WAC5D,OAAQ,UAAW,WAAY,YAAa,YAAa,YACzD,sBAAuB,UAwFVC,MArFHA,KACV,MAAOC,EAAkBC,GAAuBC,mBAAS,KAClDC,EAAYC,GAAiBF,mBAAS,OACtCG,EAAOC,GAAYJ,mBAAS,MAE7BK,EAAwBC,IAC5B,MAAMC,EAAQD,EAAME,OAAOD,MAC3BR,EAAqBU,GACfA,EAAUC,SAASH,GACdE,EAAUE,OAAQC,GAASA,IAASL,GAEpC,IAAIE,EAAWF,KAkC5B,OACEM,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,YACGlB,EAASmB,IAAKC,GACbH,IAAAC,cAAA,OAAKG,IAAKD,GACRH,IAAAC,cAAA,SACEI,KAAK,WACLC,GAAIH,EACJT,MAAOS,EACPI,SAAUf,IAEZQ,IAAAC,cAAA,SAAOO,QAASL,GAASA,MAI/BH,IAAAC,cAAA,UAAQQ,QA7CaC,KACvB,GAAgC,IAA5BzB,EAAiB0B,OAEnB,YADApB,EAAS,sCAIX,MAAMqB,EAAQ3B,EAAiB4B,KAAK,KAC9BC,EAAM,0DAAAC,OAA6DH,GAEzEI,MAAMF,GACHG,KAAMC,GAAaA,EAASC,QAC5BF,KAAMG,IACDA,EAAKC,SAEP9B,EAAS6B,EAAKC,SACdhC,EAAc,QAGdA,EAAc+B,EAAKA,MACnB7B,EAAS,SAGZ+B,MAAOhC,IACNiC,QAAQjC,MAAM,uBAAwBA,GACtCC,EAAS,0CACTF,EAAc,UAoBmB,SAGlCC,GAASU,IAAAC,cAAA,OAAKuB,MAAO,CAAEC,MAAO,QAASzB,IAAAC,cAAA,cAAQ,UAAe,IAAEX,GAGhEF,GACCY,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,UAAe,IAAEb,EAAWsC,SACvC1B,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,UAAe,IAAEb,EAAWuC,SACvC3B,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,UAAe,IAAEb,EAAWwC,SACvC5B,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,aAAkB,IAAEb,EAAWyC,OAC1C7B,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,aAAkB,IAAEb,EAAW0C,OAC1C9B,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,cAAmB,IAAEb,EAAW2C,aAC3C/B,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,qBAA0B,IAAEb,EAAW4C,eAClDhC,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,kBAAuB,IAAEb,EAAW6C,iBAC/CjC,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,eAAoB,IAAE,IAAIiC,KAAK9C,EAAW+C,YAAYC,qBC7E5DC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,KAAKuB,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlD,IAAAC,cAACD,IAAMmD,WAAU,KACfnD,IAAAC,cAACjB,EAAG,QAORqD,K","file":"static/js/main.761c05f1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst rarities = [\n  \"2009\", \"uncommon\", \"rare\", \"epic\", \"black_uncommon\", \"black_rare\",\n  \"black_epic\", \"palindrome\", \"jan2009\", \"vintage\", \"nakamoto\", \"pizza\", \n  \"jpeg\", \"hitman\", \"silkroad\", \"alpha\", \"omega\", \"1_digit\", \"2_digits\", \n  \"3_digits\", \"perfect_palinception\", \"uniform_palinception\", \"rodarmor\", \n  \"450x\", \"block_9\", \"block_78\", \"block_286\", \"block_666\", \"fibonacci\", \n  \"sequence_palindrome\", \"legacy\"\n];\n\nconst App = () => {\n  const [selectedRarities, setSelectedRarities] = useState([]);\n  const [apiResults, setApiResults] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleCheckboxChange = (event) => {\n    const value = event.target.value;\n    setSelectedRarities((prevState) => {\n      if (prevState.includes(value)) {\n        return prevState.filter((item) => item !== value);\n      } else {\n        return [...prevState, value];\n      }\n    });\n  };\n\n  const handleQueryClick = () => {\n    if (selectedRarities.length === 0) {\n      setError(\"Please select at least one rarity.\");\n      return;\n    }\n\n    const query = selectedRarities.join(\",\");\n    const apiUrl = `https://api.deezy.io/v1/sat-hunting/circulation?rarity=${query}`;\n\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message) {\n          // Handle specific error messages from the API\n          setError(data.message);\n          setApiResults(null); // Clear previous results\n        } else {\n          // Successful response\n          setApiResults(data.data);\n          setError(null); // Clear any previous errors\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n        setError(\"An error occurred while fetching data.\");\n        setApiResults(null); // Clear previous results\n      });\n  };\n\n  return (\n    <div>\n      <h1>Select Rarities</h1>\n      <form>\n        {rarities.map((rarity) => (\n          <div key={rarity}>\n            <input\n              type=\"checkbox\"\n              id={rarity}\n              value={rarity}\n              onChange={handleCheckboxChange}\n            />\n            <label htmlFor={rarity}>{rarity}</label>\n          </div>\n        ))}\n      </form>\n      <button onClick={handleQueryClick}>Query</button>\n\n      {/* Display Error Message */}\n      {error && <div style={{ color: \"red\" }}><strong>Error:</strong> {error}</div>}\n\n      {/* Display API Response */}\n      {apiResults && (\n        <div>\n          <h2>Results</h2>\n          <p><strong>Total:</strong> {apiResults.n_total}</p>\n          <p><strong>Mined:</strong> {apiResults.n_mined}</p>\n          <p><strong>Epoch:</strong> {apiResults.n_epoch}</p>\n          <p><strong>365 Days:</strong> {apiResults.n_365}</p>\n          <p><strong>Sequence:</strong> {apiResults.n_seq}</p>\n          <p><strong>Inscribed:</strong> {apiResults.n_inscribed}</p>\n          <p><strong>Sequence Holders:</strong> {apiResults.n_seq_holders}</p>\n          <p><strong>Total Holders:</strong> {apiResults.n_total_holders}</p>\n          <p><strong>Updated At:</strong> {new Date(apiResults.updated_at).toLocaleString()}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}